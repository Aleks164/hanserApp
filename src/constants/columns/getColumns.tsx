import React from "react";
import { ColumnType } from "antd/es/table";
import { ChosenProductsType } from "@/store/StatStoreContext";
import ProductImage from "@/components/ProductImage";
import { FeedbacksParams } from "@/Pages/TabTables";
import { MergeItem } from "..";
import { Row, Button } from "antd";

export type GetReportColumnType = typeof getColumns;
type GetReportColumnArgsType = {
  chosenProducts: ChosenProductsType;
  setFeedbacksParams: React.Dispatch<React.SetStateAction<FeedbacksParams>>;
};

type Re = Required<MergeItem>;

export const getColumns = ({
  chosenProducts,
  setFeedbacksParams,
}: GetReportColumnArgsType): ColumnType<MergeItem>[] => [
  {
    title: "–ë–∞—Ä-–∫–æ–¥",
    dataIndex: "barcode",
    key: "barcode",
    fixed: "left",
    width: 90,
    sorter: (a, b) => {
      return ("" + a.barcode).localeCompare(b.barcode);
    },
  },
  {
    title: "–§–æ—Ç–æ",
    dataIndex: "nmId",
    key: "nmId",
    fixed: "left",
    width: 140,
    render: (value: number, record) => (
      <ProductImage value={value} record={record} />
    ),
  },
  {
    title: "–†–µ–π—Ç–∏–Ω–≥",
    dataIndex: "valuation",
    key: "valuation",
    fixed: "left",
    width: 140,
    sorter: (a, b) => a.nmId - b.nmId,
    render: (value: number, record) => (
      <>
        {"‚≠êÔ∏è"} {record?.valuation || "-"}
      </>
    ),
  },
  {
    title: "–û—Ç–∑—ã–≤—ã",
    dataIndex: "feedbacksCount",
    key: "feedbacksCount",
    fixed: "left",
    width: 140,
    sorter: (a, b) => a.nmId - b.nmId,
    render: (value: number, record) => (
      <Row
        style={{
          minWidth: 55,
          display: "flex",
          justifyContent: "space-around",
          alignItems: "center",
        }}
      >
        <Button
          style={{
            width: 20,
            display: "flex",
            justifyContent: "center",
            alignItems: "center",
          }}
          onClick={() =>
            setFeedbacksParams((prevState) => ({
              ...prevState,
              visible: true,
              nmid: record.nmId,
            }))
          }
        >
          {"üí¨"}
        </Button>{" "}
        {record.feedbacksCount || "-"}
      </Row>
    ),
  },
  {
    title: "–ü—Ä–µ–¥–º–µ—Ç",
    dataIndex: "subject",
    key: "subject",
    width: 90,
    sorter: (a, b) => {
      return ("" + a.subject).localeCompare(b.subject);
    },
  },
  {
    title: "–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞",
    dataIndex: "supplierArticle",
    key: "supplierArticle",
    width: 125,
    sorter: (a, b) => {
      return ("" + a.supplierArticle).localeCompare(b.supplierArticle);
    },
  },
  {
    title: "–ê—Ä—Ç–∏–∫—É–ª WB",
    dataIndex: "nmId",
    key: "nmId",
    width: 100,
    render: (value: number, record) => {
      return (
        <div className="nmId_item" style={{ textAlign: "center" }}>
          {value}
        </div>
      );
    },
    sorter: (a, b) => a.nmId - b.nmId,
  },
  {
    title: "–†–∞–∑–º–µ—Ä",
    dataIndex: "techSize",
    key: "techSize",
    width: 80,
    sorter: (a, b) => {
      return ("" + a.techSize).localeCompare(b.techSize);
    },
  },
  {
    title: "–°–∫–ª–∞–¥",
    dataIndex: "warehouseName",
    key: "warehouseName",
    width: 80,
    sorter: (a, b) => {
      return ("" + a.warehouseName).localeCompare(b.warehouseName);
    },
  },
  {
    title: "–ö–æ–ª-–≤–æ –Ω–∞ —Å–∫–ª–∞–¥–µ",
    dataIndex: "quantity",
    key: "quantity",
    width: 85,
    render: (value) => value || 0,
    sorter: (a, b) => a.quantity! - b.quantity!,
  },
  {
    title: "–í–æ–∑–≤—Ä–∞—â–∞—é—Ç—Å—è –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ –Ω–∞ —Å–∫–ª–∞–¥",
    dataIndex: "inWayFromClient",
    key: "inWayFromClient",
    width: 80,
    render: (value) => value || 0,
    sorter: (a, b) => a.inWayFromClient - b.inWayFromClient,
  },
  {
    title: "–§–∞–∫—Ç–∏—á–µ—Å–∫–∞—è —Ü–µ–Ω–∞ —Å —É—á–µ—Ç–æ–º –≤—Å–µ—Ö —Å–∫–∏–¥–æ–∫",
    dataIndex: "finishedPrice",
    key: "finishedPrice",
    width: 85,
    render: (value) =>
      value === "---" ? value : (value && (+value).toFixed()) || 0,
    sorter: (a, b) => a.finishedPrice - b.finishedPrice,
  },
  {
    title: "–ö–æ–ª-–≤–æ –∑–∞–∫–∞–∑–æ–≤",
    dataIndex: "orderQuantity",
    key: "orderQuantity",
    width: 85,
    render: (value) => value || 0,
    sorter: (a, b) => a.orderQuantity - b.orderQuantity,
  },
  {
    title: "–í–æ–∑–≤—Ä–∞—Ç–æ–≤",
    dataIndex: "isCancel",
    key: "isCancel",
    width: 60,
    render: (value) => value || 0,
    sorter: (a, b) => +a.isCancel - +b.isCancel,
  },
  {
    title: "–ö–æ–ª-–≤–æ –ø—Ä–æ–¥–∞–∂",
    dataIndex: "saleQuantity",
    key: "saleQuantity",
    width: 85,
    fixed: "right",
    render: (value) => value || 0,
    sorter: (a, b) => a.saleQuantity - b.saleQuantity,
  },
];
